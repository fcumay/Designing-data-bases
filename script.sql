 USE db1;

-- Задание 1 --
#1.  Получить полную информацию обо всех преподавателях.
SELECT * FROM ПРЕПОДАВАТЕЛИ;

#2. Получить полную информацию обо всех студенческих группах на специальности ЭВМ.
SELECT * FROM СТУДЕНЧЕСКАЯ_ГРУППА
WHERE Специальность = 'ЭВМ';

#3. Получить личный номер преподавателя и номера аудиторий, в которых они преподают предмет с кодовым номером 18П.
SELECT DISTINCT ЛичныйНомер,
			 НомерАудитории
FROM ПРЕПОДАВАТЕЛЬ_ПРЕПОДАЕТ_ПРЕДМЕТЫ_В_ГРУППАХ 
WHERE КодовыйНомерПредмета = '18П';

#4. Получить  номера предметов и названия предметов, которые ведет преподаватель Костин.
SELECT DISTINCT П_П_Г.КодовыйНомерПредмета, НазваниеПредмета
FROM ПРЕПОДАВАТЕЛЬ_ПРЕПОДАЕТ_ПРЕДМЕТЫ_В_ГРУППАХ AS П_П_Г
JOIN ПРЕДМЕТ AS П ON П_П_Г.КодовыйНомерПредмета = П.КодовыйНомерПредмета 
JOIN ПРЕПОДАВАТЕЛИ AS ПРЕПОД ON ПРЕПОД.ЛичныйНомер = П_П_Г.ЛичныйНомер
WHERE ПРЕПОД.Фамилия = 'Костин';

#5. Получить номер группы, в которой ведутся предметы преподавателем Фроловым.
SELECT КодовыйНомерГруппы
FROM ПРЕПОДАВАТЕЛЬ_ПРЕПОДАЕТ_ПРЕДМЕТЫ_В_ГРУППАХ AS П_П_Г
JOIN ПРЕПОДАВАТЕЛИ AS ПРЕПОД ON П_П_Г.ЛичныйНомер = ПРЕПОД.ЛичныйНомер
WHERE ПРЕПОД.Фамилия = 'Фролов';

#6. Получить информацию о предметах, которые ведутся на специальности АСОИ.
SELECT DISTINCT * FROM ПРЕДМЕТ
WHERE Специальность = 'АСОИ';

#7. Получить информацию о преподавателях, которые ведут предметы на специальности АСОИ.
SELECT * FROM ПРЕПОДАВАТЕЛИ
WHERE Специальность LIKE '%АСОИ%';

#8. Получить фамилии преподавателей, которые ведут предметы в 210 аудитории.
SELECT DISTINCT Фамилия
FROM ПРЕПОДАВАТЕЛЬ_ПРЕПОДАЕТ_ПРЕДМЕТЫ_В_ГРУППАХ
JOIN ПРЕПОДАВАТЕЛИ ON ПРЕПОДАВАТЕЛЬ_ПРЕПОДАЕТ_ПРЕДМЕТЫ_В_ГРУППАХ.ЛичныйНомер = ПРЕПОДАВАТЕЛИ.ЛичныйНомер
WHERE НомерАудитории = 210;

#9.Получить названия предметов и названия групп, которые ведут занятия в аудиториях с 100 по 200.
SELECT DISTINCT НазваниеПредмета, НазваниеГруппы
FROM ПРЕПОДАВАТЕЛЬ_ПРЕПОДАЕТ_ПРЕДМЕТЫ_В_ГРУППАХ AS П_П_П_Г
JOIN ПРЕДМЕТ ON П_П_П_Г.КодовыйНомерПредмета = ПРЕДМЕТ.КодовыйНомерПредмета
JOIN СТУДЕНЧЕСКАЯ_ГРУППА ON П_П_П_Г.КодовыйНомерГруппы = СТУДЕНЧЕСКАЯ_ГРУППА.КодовыйНомерГруппы
WHERE  НомерАудитории BETWEEN 100 AND 200;

#10.Получить пары номеров групп с одной специальности.
SELECT DISTINCT S_G1.КодовыйНомерГруппы,
			    S_G2.КодовыйНомерГруппы
FROM СТУДЕНЧЕСКАЯ_ГРУППА AS S_G1
JOIN СТУДЕНЧЕСКАЯ_ГРУППА AS S_G2
ON S_G1.Специальность = S_G2.Специальность 
AND S_G1.НазваниеГруппы != S_G2.НазваниеГруппы 
AND S_G1.КодовыйНомерГруппы > S_G2.КодовыйНомерГруппы;

#11. Получить общее количество студентов, обучающихся на специальности ЭВМ.
SELECT Специальность,
	  SUM(КоличествоЧеловек) 
FROM СТУДЕНЧЕСКАЯ_ГРУППА 
WHERE Специальность = 'ЭВМ'
GROUP BY Специальность;

#12. Получить номера преподавателей, обучающих студентов по специальности ЭВМ.
SELECT ЛичныйНомер
FROM ПРЕПОДАВАТЕЛИ
WHERE Специальность LIKE '%ЭВМ%';

#13. Получить номера предметов, изучаемых всеми студенческими группами.
SELECT КодовыйНомерПредмета FROM ПРЕПОДАВАТЕЛЬ_ПРЕПОДАЕТ_ПРЕДМЕТЫ_В_ГРУППАХ
GROUP BY КодовыйНомерПредмета
HAVING COUNT(КодовыйНомерГруппы) = (SELECT COUNT(*) FROM СТУДЕНЧЕСКАЯ_ГРУППА);

#14.Получить фамилии преподавателей, преподающих те же предметы, что и преподаватель преподающий предмет с номером 14П.
SELECT DISTINCT Фамилия FROM преподаватели
JOIN преподаватель_преподает_предметы_в_группах USING (ЛичныйНомер)
WHERE КодовыйНомерПредмета IN (SELECT КодовыйНомерПредмета
FROM преподаватель_преподает_предметы_в_группах
WHERE ЛичныйНомер = (SELECT DISTINCT ЛичныйНомер
FROM преподаватель_преподает_предметы_в_группах
WHERE КодовыйНомерПредмета = '14П'));

#15. Получить информацию о предметах, которые не ведет преподаватель с личным номером 221Л.
SELECT DISTINCT * FROM предмет
WHERE КодовыйНомерПредмета NOT IN (SELECT DISTINCT КодовыйНомерПредмета FROM преподаватель_преподает_предметы_в_группах
WHERE ЛичныйНомер = '221Л');

#16. Получить информацию о предметах, которые не изучаются в группе М-6.
SELECT DISTINCT * FROM ПРЕДМЕТ
WHERE КодовыйНомерПредмета  NOT IN
(SELECT КодовыйНомерПредмета FROM ПРЕПОДАВАТЕЛЬ_ПРЕПОДАЕТ_ПРЕДМЕТЫ_В_ГРУППАХ
JOIN СТУДЕНЧЕСКАЯ_ГРУППА ON ПРЕПОДАВАТЕЛЬ_ПРЕПОДАЕТ_ПРЕДМЕТЫ_В_ГРУППАХ.КодовыйНомерГруппы = СТУДЕНЧЕСКАЯ_ГРУППА.КодовыйНомерГруппы
WHERE НазваниеГруппы = 'М-6');

#17. Получить информацию о доцентах, преподающих в группах 3Г и 8Г.
SELECT * FROM ПРЕПОДАВАТЕЛИ
WHERE ЛичныйНомер IN
(SELECT DISTINCT ЛичныйНомер FROM  ПРЕПОДАВАТЕЛЬ_ПРЕПОДАЕТ_ПРЕДМЕТЫ_В_ГРУППАХ
 WHERE КодовыйНомерГруппы = '8Г' OR КодовыйНомерГруппы = '3Г')
 AND Должность = 'Доцент'; 
 
#18. Получить номера предметов, номера преподавателей, номера групп, в которых ведут занятия преподаватели с кафедры ЭВМ, имеющих специальность АСОИ.
SELECT КодовыйНомерПредмета, ЛичныйНомер, КодовыйНомерГруппы FROM ПРЕПОДАВАТЕЛЬ_ПРЕПОДАЕТ_ПРЕДМЕТЫ_В_ГРУППАХ
WHERE ЛичныйНомер IN (
SELECT ЛичныйНомер FROM ПРЕПОДАВАТЕЛИ
WHERE Кафедра = 'ЭВМ' AND Специальность LIKE '%АСОИ%');

 #19 Получить номера групп с такой же специальностью, что и специальность преподавателей.
 SELECT DISTINCT НазваниеГруппы FROM студенческая_группа
 WHERE Специальность IN (SELECT DISTINCT Специальность FROM преподаватели) OR Специальность = ('АСОИ');
 
#20.Получить номера преподавателей с кафедры ЭВМ, преподающих предметы по специальности, совпадающей со специальностью студенческой группы. 
SELECT DISTINCT ПРЕПОДАВАТЕЛЬ_ПРЕПОДАЕТ_ПРЕДМЕТЫ_В_ГРУППАХ .ЛичныйНомер FROM ПРЕПОДАВАТЕЛЬ_ПРЕПОДАЕТ_ПРЕДМЕТЫ_В_ГРУППАХ 
JOIN ПРЕПОДАВАТЕЛИ ON ПРЕПОДАВАТЕЛЬ_ПРЕПОДАЕТ_ПРЕДМЕТЫ_В_ГРУППАХ.ЛичныйНомер = ПРЕПОДАВАТЕЛИ.ЛичныйНомер
JOIN СТУДЕНЧЕСКАЯ_ГРУППА ON СТУДЕНЧЕСКАЯ_ГРУППА.КодовыйНомерГруппы = ПРЕПОДАВАТЕЛЬ_ПРЕПОДАЕТ_ПРЕДМЕТЫ_В_ГРУППАХ.КодовыйНомерГруппы
WHERE СТУДЕНЧЕСКАЯ_ГРУППА.Специальность IN (SELECT Специальность FROM ПРЕПОДАВАТЕЛИ) AND Кафедра = 'ЭВМ';

#21. Получить специальности студенческой группы, на которых работают преподаватели кафедры АСУ.
SELECT DISTINCT СТУДЕНЧЕСКАЯ_ГРУППА.Специальность FROM ПРЕПОДАВАТЕЛЬ_ПРЕПОДАЕТ_ПРЕДМЕТЫ_В_ГРУППАХ 
JOIN ПРЕПОДАВАТЕЛИ ON ПРЕПОДАВАТЕЛЬ_ПРЕПОДАЕТ_ПРЕДМЕТЫ_В_ГРУППАХ.ЛичныйНомер = ПРЕПОДАВАТЕЛИ.ЛичныйНомер
JOIN СТУДЕНЧЕСКАЯ_ГРУППА ON СТУДЕНЧЕСКАЯ_ГРУППА.КодовыйНомерГруппы = ПРЕПОДАВАТЕЛЬ_ПРЕПОДАЕТ_ПРЕДМЕТЫ_В_ГРУППАХ.КодовыйНомерГруппы
WHERE Кафедра = 'АСУ';

#22. Получить номера предметов, изучаемых группой АС-8.
SELECT DISTINCT ПРЕДМЕТ.КодовыйНомерПредмета  FROM ПРЕПОДАВАТЕЛЬ_ПРЕПОДАЕТ_ПРЕДМЕТЫ_В_ГРУППАХ 
JOIN ПРЕДМЕТ ON ПРЕПОДАВАТЕЛЬ_ПРЕПОДАЕТ_ПРЕДМЕТЫ_В_ГРУППАХ.КодовыйНомерПредмета = ПРЕДМЕТ.КодовыйНомерПредмета
JOIN СТУДЕНЧЕСКАЯ_ГРУППА ON СТУДЕНЧЕСКАЯ_ГРУППА.КодовыйНомерГруппы = ПРЕПОДАВАТЕЛЬ_ПРЕПОДАЕТ_ПРЕДМЕТЫ_В_ГРУППАХ.КодовыйНомерГруппы
WHERE НазваниеГруппы = 'АС-8';

#23. Получить номера студенческих групп, которые изучают те же предметы, что и студенческая группа АС-8.
SELECT DISTINCT КодовыйНомерГруппы FROM преподаватель_преподает_предметы_в_группах
WHERE КодовыйНомерПредмета NOT IN
(SELECT КодовыйНомерПредмета FROM преподаватель_преподает_предметы_в_группах
JOIN студенческая_группа USING (КодовыйНомерГруппы)
WHERE студенческая_группа.НазваниеГруппы = 'АС-8')
GROUP BY КодовыйНомерГруппы
HAVING COUNT(*) = (SELECT COUNT(*) FROM преподаватель_преподает_предметы_в_группах
JOIN студенческая_группа USING(КодовыйНомерГруппы)
WHERE студенческая_группа.НазваниеГруппы = 'АС-8');

#24.Получить номера студенческих групп, которые не изучают предметы, преподаваемых в студенческой группе АС-8.
SELECT КодовыйНомерГруппы FROM студенческая_группа
WHERE КодовыйНомерГруппы NOT IN (SELECT DISTINCT КодовыйНомерГруппы FROM преподаватель_преподает_предметы_в_группах
WHERE КодовыйНомерПредмета IN
(SELECT КодовыйНомерПредмета FROM преподаватель_преподает_предметы_в_группах
INNER JOIN студенческая_группа USING(КодовыйНомерГруппы)
WHERE студенческая_группа.НазваниеГруппы = 'АС-8'));

#25.Получить номера студенческих групп, которые не изучают предметы, преподаваемых преподавателем 430Л.
SELECT DISTINCT КодовыйНомерГруппы FROM ПРЕПОДАВАТЕЛЬ_ПРЕПОДАЕТ_ПРЕДМЕТЫ_В_ГРУППАХ
WHERE КодовыйНомерГруппы NOT IN (SELECT DISTINCT КодовыйНомерГруппы FROM ПРЕПОДАВАТЕЛЬ_ПРЕПОДАЕТ_ПРЕДМЕТЫ_В_ГРУППАХ
WHERE ЛичныйНомер = '430Л');

#26 Получить номера преподавателей, работающих с группой Э-15, но не преподающих предмет 12П.
SELECT ЛичныйНомер FROM преподаватель_преподает_предметы_в_группах 
JOIN студенческая_группа USING (КодовыйНомерГруппы)
WHERE НазваниеГруппы = 'Э-15' AND КодовыйНомерПредмета != '12П';

-- Задание 2 --
 USE db2;
 
#29. Получить номера проектов, полностью обеспечиваемых поставщиком П1.
WITH temp_table AS (SELECT PR_SHARP, COUNT(DISTINCT P_SHARP) AS num  FROM spj
GROUP BY PR_SHARP
HAVING num = 1)
SELECT PR_SHARP FROM spj
JOIN temp_table USING(PR_SHARP)
WHERE P_SHARP = 'П1';

#14. Получить все такие пары номеров деталей, которые обе поставляются одновременно одним поставщиком.
SELECT DISTINCT SPJ.D_SHARP, SPJ2.D_SHARP  FROM SPJ
JOIN SPJ AS SPJ2 ON SPJ.P_SHARP = SPJ2.P_SHARP
AND SPJ.D_SHARP > SPJ2.D_SHARP;

#22. Получить номера проектов, использующих по крайней мере одну деталь, имеющуюся у поставщика П1.
SELECT DISTINCT PR_SHARP FROM SPJ
WHERE P_SHARP = 'П1';

#11. Получить все пары названий городов, для которых поставщик из первого города обеспечивает проект во втором городе.
SELECT DISTINCT s.ГОРОД, j.ГОРОД from spj
JOIN s ON P = P_SHARP
JOIN j ON PR = PR_SHARP
WHERE s.ГОРОД < j.ГОРОД;

#2. Получить полную информацию обо всех проектах в Таллине.
SELECT * FROM j
WHERE ГОРОД = 'Таллинн';

#4. Получить все отправки, где количество находится в диапазоне от 300 до 750 включительно.
SELECT DISTINCT * FROM SPJ
WHERE S BETWEEN 300 AND 700;

#8. Получить все такие тройки "номера поставщиков-номера деталей-номера проектов",
# для которых никакие из двух выводимых поставщиков, деталей и проектов не размещены в одном городе.
SELECT DISTINCT P_SHARP, D_SHARP, PR_SHARP FROM spj
JOIN j ON j.PR = spj.PR_SHARP
JOIN s ON s.P = spj.P_SHARP
JOIN p ON p.D = spj.D_SHARP
WHERE j.ГОРОД != p.Город AND j.ГОРОД != s.ГОРОД AND p.Город != s.ГОРОД;

#33. Получить все города, в которых расположен по крайней мере один поставщик, одна деталь или один проект.
SELECT ГОРОД FROM j
UNION 
SELECT Город FROM p 
UNION
SELECT ГОРОД FROM s;

#13. Получить номера проектов, обеспечиваемых по крайней мере одним поставщиком не из того же города.
SELECT DISTINCT PR FROM spj
JOIN j ON j.PR = spj.PR_SHARP
JOIN s ON s.P = spj.P_SHARP
WHERE j.ГОРОД != s.ГОРОД;

#27. Получить номера поставщиков, поставляющих деталь Д1 для некоторого проекта в количестве, 
#большем среднего количества деталей Д1 в поставках для этого проекта.
WITH temp AS (SELECT D_SHARP, AVG(spj.S) AS average FROM spj
GROUP BY D_SHARP)
SELECT P_SHARP FROM spj
JOIN temp USING (D_SHARP)
WHERE D_SHARP = 'Д1' AND S > average;

 







 


